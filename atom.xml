<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Crazy Economist's Blog]]></title>
  <link href="http://en.ssidelnikov.ru/atom.xml" rel="self"/>
  <link href="http://en.ssidelnikov.ru/"/>
  <updated>2013-09-25T16:11:10+06:00</updated>
  <id>http://en.ssidelnikov.ru/</id>
  <author>
    <name><![CDATA[Stan S]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hello Octopress]]></title>
    <link href="http://en.ssidelnikov.ru/2013/06/hello-octopress/"/>
    <updated>2013-06-18T14:58:00+06:00</updated>
    <id>http://en.ssidelnikov.ru/2013/06/hello-octopress</id>
    <content type="html"><![CDATA[<p>They say sites with different languages should be separate. They also say the sites should be fast. Well, then my Eng version of the site would be on Octopress.</p>

<!-- more -->


<p>Ok, they&rsquo;ve described how to set up a fresh new blog with the Github Pages quite well. But there&rsquo;s no guide on how to make it work after git clone on a new machine.
So here&rsquo;s the answer:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/my_root_folder/
</span><span class='line'><span class="nv">$ </span>git clone git@github.com:username/username.github.io.git -b <span class="nb">source </span>my_blog
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>my_blog
</span><span class='line'><span class="nv">$ </span>git clone git@github.com:username/username.github.io.git -b master _deploy
</span></code></pre></td></tr></table></div></figure>


<p>And then as usuall, make changes to the files like <code>rake new_post["My super awesome new blog entry"]</code> and:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># In ~/my_root_folder/my_blog/</span>
</span><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span>rake deploy
</span><span class='line'><span class="c"># The changes from your _deploy dir goes to the server (committed and pushed)</span>
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;An awesome entry added&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>To make it easier to deploy and commit source changes you could add some aliases (thanks to the <a href="http://www.cyberciti.biz/faq/linux-unix-pass-argument-to-alias-command/">article</a>) to your ~/.bash_profile (or ~/.zprofile):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>scommit<span class="o">()</span> <span class="o">{</span>git add . <span class="o">&amp;&amp;</span> git commit -m <span class="se">\&quot;</span><span class="nv">$@</span><span class="se">\&quot;</span> <span class="o">&amp;&amp;</span> git push<span class="o">}</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">bdeploy</span><span class="o">=</span><span class="s2">&quot;rake generate &amp;&amp; rake deploy&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Android App]]></title>
    <link href="http://en.ssidelnikov.ru/2012/06/first-android-app/"/>
    <updated>2012-06-15T11:36:00+06:00</updated>
    <id>http://en.ssidelnikov.ru/2012/06/first-android-app</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve finished a beta of my first Android app for internal use, a front office system for the Cafe owned by our company. It has 6 thousands lines of code, I&rsquo;ve spent 170 hours for immidiate development of it.</p>

<!--more-->


<h2>App Features</h2>

<p>So, what the app can do?</p>

<p>It can load a list of goods through FTP or 1C web service. It consumes the following data: name of the item, its group, price and a weight goods tag.</p>

<p>The app displays the list of goods divided by their groups for easier look up for the needed item. The lists shows the name and price for each item.</p>

<p><span class='caption-wrapper'><img src="http://en.ssidelnikov.ru/images/posts/2012/first-android-app-1.jpg" title="Goods (blue border) and groups (white border)" ><span class='caption-text'>Goods (blue border) and groups (white border)</span></span></p>

<p>The main feature of the app is to compose an order with both piece-goods and weight goods. For piece-goods the operator simply enters its number by means of the + and &ndash; buttons. For weight items, they need to enter the weight with the virtual keyboard. As the items are added and deleted fromt the order, the total price without discounts is displayed.</p>

<p><span class='caption-wrapper'><img src="http://en.ssidelnikov.ru/images/posts/2012/first-android-app-2-order.jpg" title="Order with three items" ><span class='caption-text'>Order with three items</span></span></p>

<p><span class='caption-wrapper'><img src="http://en.ssidelnikov.ru/images/posts/2012/first-android-app-3-weight.jpg" title="A request for the item weight" ><span class='caption-text'>A request for the item weight</span></span></p>

<p>The app can also deal with the clients&#8217; cards, applying discounts accrodingly. To apply a card to the order, operator enters its number in a special popup window.</p>

<p><span class='caption-wrapper'><img src="http://en.ssidelnikov.ru/images/posts/2012/first-android-app-4-card-number.jpg" title="Card number request" ><span class='caption-text'>Card number request</span></span></p>

<p><span class='caption-wrapper'><img src="http://en.ssidelnikov.ru/images/posts/2012/first-android-app-5-payment.jpg" title="Payment window when the card balance is zero" ><span class='caption-text'>Payment window when the card balance is zero</span></span></p>

<p>When a card number is entered the client has an option to pay for the order partly with their bonuses. The maximum bonus payment is calculated as a constant percentage of the order value. There&rsquo;s also an option to use a bonus rate other than 1 to 1.</p>

<p><span class='caption-wrapper'><img src="http://en.ssidelnikov.ru/images/posts/2012/first-android-app-6-payment-plus.jpg" title="Payment window with some positive card balance" ><span class='caption-text'>Payment window with some positive card balance</span></span></p>

<p>If the client decided to pay for the order with bonuses, the app immidiately withdraws the required amount from the card balance in the central database through the web service provided by 1C system. The detailed information about the sale is written to another central 1C based database.</p>

<p><span class='caption-wrapper center'><img class="center" src="http://en.ssidelnikov.ru/images/posts/2012/first-android-app-7-links.svg" title="Links of the app with other software of the company" ><span class='caption-text'>Links of the app with other software of the company</span></span></p>

<p>The app has some settings:</p>

<ul>
<li>Goods information transport: FTP or web service.</li>
<li>FTP server params.</li>
<li>Web servers URLs: for goods import and bonuses info exchange.</li>
<li>Clients cards default discount rate.</li>
<li>Current department code.</li>
<li>Maximum percantage of the order value for calculation of bonus payment limits.</li>
<li>Bonus payments rate.</li>
</ul>


<h2>Technical details</h2>

<p>There were actually no obstacles we couldn&rsquo;t solve in little time. I think, there&rsquo;re only two points worth mentioning:</p>

<ol>
<li>When working with an SQLite databes in Android you should you <a href="http://stackoverflow.com/questions/2244965/having-several-sqliteopenhelper-in-one-appli-android">only one OpenHelper</a>. I realised this when already implemented two helpers used in different parts of the app. Fixed it up in 4 hours. Not too much, but would better not make such pitty mistakes.</li>
<li>I&rsquo;ve spent a lot of time making the app work with the 1C web service together. In fact the <a href="http://code.google.com/p/ksoap2-android/">ksoap2-android</a> library getting with all this stuff very well until we deal with some complex data structures such as an array of order goods. I described a solution for dealing with complex data structures over SOAP on <a href="http://habrahabr.ru/post/145389/">habr</a> (RU).</li>
</ol>


<p>I used <a href="http://pivotal.github.com/robolectric/">Robolectric</a> as a testing framework which turned out to be a really interesting and handy thing. Another great stuff that helps considerably lower number of lines of code is <a href="https://code.google.com/p/mockito/">Mockito</a>. This is a dependency mocking framework. In an ideal world you&rsquo;d probably also use <a href="http://code.google.com/p/robotium/">Robotium</a> for the integration testing, but I didn&rsquo;t get enough time for using this tool in the project.</p>

<p>I used <a href="http://www.fogcreek.com/fogbugz/">FogBugz</a> for task (and bugs) management. That&rsquo;s the best tool I&rsquo;ve ever found that offers a great time tracking feature, esp if you&rsquo;re working in Eclipse. This IDE has a great plugin for the FogBugz service, and it gets all the headaches about time tracking from you. Just tell it what you&rsquo;re working on now, and it does the rest of the job.</p>

<h2>Conclusion</h2>

<p>The first snap is ready. It&rsquo;s time for the first &ldquo;field tests&rdquo; in the Cafe. That&rsquo;s by no means a less interesting and exciting stage than the development itself. Hope everything went smoothly :)</p>

<p>Update 01.04.2013. The app is working. It&rsquo;s not perfect, but working :) I decided to open the sources since the app is now not developing, and the very sources doesn&rsquo;t have any world shaking code: <a href="https://bitbucket.org/ssidelnikov/cafe-android">app sources</a> and <a href="https://bitbucket.org/ssidelnikov/cafe-android-tests">tests sources</a>.</p>
]]></content>
  </entry>
  
</feed>
